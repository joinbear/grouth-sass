//忽略将页面中的数字识别为电话号码
<meta name="format-detection" content="telephone=no" />

//忽略Android平台中对邮箱地址的识别
<meta name="format-detection" content="email=no" />

当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari
<meta name="apple-mobile-web-app-capable" content="yes" />
<!-- ios7.0版本以后，safari上已看不到效果 -->

取消input在ios下，输入的时候英文首字母的默认大写
<input autocapitalize="off" autocorrect="off" />

禁止ios 长按时不触发系统的菜单，禁止ios&android长按时下载图片

.css{-webkit-touch-callout: none}

禁止ios和android用户选中文字

.css{-webkit-user-select:none}
打电话

<a href="tel:0755-10086">打电话给:0755-10086</a>

发短信，winphone系统无效

<a href="sms:10086">发短信给: 10086</a>

写邮件

<a href="mailto:peun@foxmail.com">peun@foxmail.com</a>


webkit表单元素的默认外观怎么重置
-webkit-appearance:none;
伪元素改变number类型input框的默认样式
input[type=number]::-webkit-textfield-decoration-container {
    background-color: transparent;
}
input[type=number]::-webkit-inner-spin-button {
     -webkit-appearance: none;
}
input[type=number]::-webkit-outer-spin-button {
     -webkit-appearance: none;
}

webkit表单输入框placeholder的颜色值能改变么

input::-webkit-input-placeholder{color:#AAAAAA;}
input:focus::-webkit-input-placeholder{color:#EEEEEE;}

webkit表单输入框placeholder的文字能换行么

ios可以，android不行~

在textarea标签下都可以换行~


android 2.3 bug
  @-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉
  after和before伪类无法使用动画animation
  border-radius不支持%单位
  translate百分比的写法和scale在一起会导致失效，例如-webkit-transform: translate(-50%,-50%) scale(-0.5, 1)
android 4.x bug
三星 Galaxy S4中自带浏览器不支持border-radius缩写
同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分
部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色
android无法同时播放多音频audio

fixed bug
  ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位
  android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位
  ios4下不支持position:fixed
解决方案
  可用isroll.js，暂无完美方案

移动端触摸按钮的效果，可明示用户有些事情正要发生，是一个比较好体验，但是移动设备中并没有鼠标指针，使用css的hover并不能满足我们的需求，还好国外有个激活移动端css的active效果。

直接在body上添加ontouchstart，同样可激活移动端css的active效果，比较推荐这种方式

<!-- 选择照片 -->
<input type=file accept="image/*">
<!-- 选择视频 -->
<input type=file accept="video/*">

-webkit-text-size-adjust禁止调整字体大小
-webkit-text-size-adjust: 100%;

/* ============================================================
   flex：定义布局为盒模型
   flex-v：盒模型垂直布局
   flex-1：子元素占据剩余的空间
   flex-align-center：子元素垂直居中
   flex-pack-center：子元素水平居中
   flex-pack-justify：子元素两端对齐
   兼容性：ios 4+、android 2.3+、winphone8+
   ============================================================ */
.flex{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}
.flex-v{-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}
.flex-1{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;}
.flex-align-center{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;}
.flex-pack-center{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}
.flex-pack-justify{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}

5、去除URL控件条

setTimeout(scrollTo,0,0,0);

8、iOS中如何彻底禁止用户在新窗口打开页面

-webkit-touch-callout:none;

9、IOS禁止用户复制或者保存图片

-webkit-touch-callout:none;

10、IOS禁止选中文字

-webkit-user-select:none

13、输入框获取焦点后默认弹出数字键盘

<input type="tel" placeholder=""/>

14、input type="number"去除上下箭头

chrome下：

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button{
    -webkit-appearance: none !important;
    margin: 0;
}

firefox下：

input[type="number"]{-moz-appearance:textfield;}

15、input type="password"自动弹出数字键盘
<input type="password" pattern="[0-9]*" maxlength="6" inputmode="numeric" name="password">

18、数字文本框显示密码样式

<input type="tel" pattern="[0-9]*" inputmode="numeric">

input[type=tel] {
    -webkit-text-security: disc;
}
/* 单行省略 */
.ellipsis {
overflow: hidden;
text-overflow: ellipsis;
white-space: nowrap;
}

/* 多行省略 */
.ellipsis-2l {
overflow : hidden;
text-overflow: ellipsis;
display: -webkit-box;
-webkit-line-clamp: 2;    /* 数值代表显示几行 */
-webkit-box-orient: vertical;
}

<!-- html结构 -->
<body>
<div class="box retina-border rt-bd-all"></div>
</body>

/* css样式 */

.box {
width: 200px;
heigth: 100px;
box-sizing: border-box;
border: 1px solid #aaa;
}

/* 去掉元素原有的边框 */
.retina-border {
position: relative;
border: none;
}

/* 通过设置伪元素放大到2倍的宽高，设置1px边框，再缩小1倍，以达到0.5px边框的效果*/
.retina-border:after {
content: '';
display: block;
width: 200%;
height: 200%;
position: absolute;
left: 0;
top: 0;
box-sizing: border-box;
border: 0px solid #aaa;
-webkit-transform-origin: left top;
transform-origin: left top;
-webkit-transform: scale(.5);
transform: scale(.5);
}

.rt-bd-all:after {
border-width: 1px;
}

/* 如果只是想设置一条边框，可以这样改一下，以此类推 */

<!-- html结构 -->
<body>
<div class="box retina-border rt-bd-b"></div>
</body>

/* css样式 */

.tr-bd-b:after {
border-bottom-width: 1px;
}

.tr-bd-t:after {
border-top-width: 1px;
}

.tr-bd-l:after {
border-left-width: 1px;
}

.tr-bd-r:after {
  border-right-width: 1px;
}


